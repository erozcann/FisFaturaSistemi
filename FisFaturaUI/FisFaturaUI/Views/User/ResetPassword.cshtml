@model FisFaturaUI.Models.ResetPasswordViewModel
@{
    ViewData["Title"] = "Şifre Sıfırla";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - FisFatura</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .reset-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .reset-card {
            background: #ffffff;
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            padding: 2.5rem 3rem;
            width: 100%;
            max-width: 480px;
            border: 1px solid #e0e0e0;
        }
        
        .reset-header {
            text-align: center;
            margin-bottom: 2.5rem;
        }
        
        .reset-header h2 {
            color: #2c3e50;
            font-weight: 700;
            font-size: 2.2rem;
            margin-bottom: 0.5rem;
        }

        .reset-header .logo-icon {
            font-size: 2.5rem;
            color: #3498db;
            margin-bottom: 1rem;
        }
        
        .reset-header p {
            color: #555;
            font-size: 1.1rem;
        }
        
        .form-control {
            border-radius: 8px;
            border: 1px solid #ced4da;
            padding: 0.9rem 1rem;
            font-size: 1.1rem;
            height: auto;
        }
        
        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
        }
        
        .btn-reset {
            background-color: #2c3e50;
            border-color: #2c3e50;
            border-radius: 8px;
            padding: 0.9rem;
            font-weight: 600;
            font-size: 1.2rem;
            width: 100%;
            transition: background-color 0.3s ease;
        }
        
        .btn-reset:hover {
            background-color: #34495e;
        }
        
        .btn-back-link {
            text-align: center;
            margin-top: 1.5rem;
        }
        
        .btn-back-link a {
            color: #3498db;
            text-decoration: none;
            font-weight: 500;
            font-size: 1.1rem;
        }
        
        .btn-back-link a:hover {
            text-decoration: underline;
        }
        
        .input-group-text {
            background-color: #e9ecef;
            border: 1px solid #ced4da;
            border-right: none;
            padding: 0.9rem 1rem;
        }

        .password-feedback {
            font-size: 0.9rem;
            margin-top: 0.25rem;
            min-height: 22px;
        }
    </style>
</head>
<body>
    <div class="reset-container">
        <div class="reset-card">
            <div class="reset-header">
                <div class="logo-icon"><i class="fas fa-lock-open"></i></div>
                <h2>Yeni Şifre Belirle</h2>
                <p>Güvenliğiniz için güçlü bir şifre seçin</p>
            </div>
            
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" style="@(ViewData.ModelState.IsValid ? "display:none;" : "")"></div>

            <form asp-action="ResetPassword" method="post" id="resetForm">
                <input asp-for="Email" type="hidden" />
                <input asp-for="Token" type="hidden" />
                
                <div class="mb-3">
                    <label asp-for="NewPassword" class="form-label">Yeni Şifre</label>
                    <div class="input-group">
                        <input asp-for="NewPassword" type="password" class="form-control" id="newPassword" placeholder="Yeni şifrenizi girin" required>
                        <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword"><i class="fas fa-eye"></i></button>
                    </div>
                    <div id="passwordStrength" class="password-feedback"></div>
                    <span asp-validation-for="NewPassword" class="text-danger small"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Yeni Şifre (Tekrar)</label>
                     <div class="input-group">
                        <input asp-for="ConfirmPassword" type="password" class="form-control" id="confirmPassword" placeholder="Şifrenizi doğrulayın" required>
                        <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword"><i class="fas fa-eye"></i></button>
                    </div>
                    <div id="passwordMatch" class="password-feedback"></div>
                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                </div>

                <div class="d-grid gap-2 mt-4">
                    <button type="submit" class="btn btn-primary btn-reset">Şifreyi Değiştir</button>
                </div>

                <div class="btn-back-link">
                    <a href="@Url.Action("Login", "User")">Giriş Sayfasına Dön</a>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function togglePasswordVisibility(inputId, buttonId) {
            const passwordInput = document.getElementById(inputId);
            const button = document.getElementById(buttonId);
            const icon = button.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.replace('fa-eye', 'fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.replace('fa-eye-slash', 'fa-eye');
            }
        }

        document.getElementById('toggleNewPassword').addEventListener('click', () => togglePasswordVisibility('newPassword', 'toggleNewPassword'));
        document.getElementById('toggleConfirmPassword').addEventListener('click', () => togglePasswordVisibility('confirmPassword', 'toggleConfirmPassword'));

        const newPasswordInput = document.getElementById('newPassword');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const passwordStrengthDiv = document.getElementById('passwordStrength');
        const passwordMatchDiv = document.getElementById('passwordMatch');

        newPasswordInput.addEventListener('input', function() {
            checkPasswordStrength(this.value);
            checkPasswordMatch();
        });
        
        confirmPasswordInput.addEventListener('input', checkPasswordMatch);

        function checkPasswordStrength(password) {
            let strength = 0;
            if (password.length >= 8) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;

            if (password.length > 0) {
                if (strength < 3) {
                    passwordStrengthDiv.innerHTML = '<span class="text-danger">Zayıf</span>';
                } else if (strength < 5) {
                    passwordStrengthDiv.innerHTML = '<span class="text-warning">Orta</span>';
                } else {
                    passwordStrengthDiv.innerHTML = '<span class="text-success">Güçlü</span>';
                }
            } else {
                passwordStrengthDiv.innerHTML = '';
            }
        }

        function checkPasswordMatch() {
            if (confirmPasswordInput.value.length > 0) {
                if (newPasswordInput.value === confirmPasswordInput.value) {
                    passwordMatchDiv.innerHTML = '<span class="text-success">Şifreler eşleşiyor</span>';
                } else {
                    passwordMatchDiv.innerHTML = '<span class="text-danger">Şifreler eşleşmiyor</span>';
                }
            } else {
                passwordMatchDiv.innerHTML = '';
            }
        }
    </script>
</body>
</html> 